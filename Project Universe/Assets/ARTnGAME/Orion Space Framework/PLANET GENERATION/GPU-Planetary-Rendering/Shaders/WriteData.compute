
//NOTE - Not every kernel has been tested

int _Width;
int _Height;

//-----------------------------------------------------------------------//

//-- write into 1 channel 2D render texture --//

#pragma kernel write2DC1

RWTexture2D<float> _Des2DC1;
RWStructuredBuffer<float> _Buffer2DC1;

[numthreads(8,8,1)]
void write2DC1(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width;
	
	_Des2DC1[id.xy] = _Buffer2DC1[idx];
}

//-- write into 2 channel 2D render texture --//

#pragma kernel write2DC2

RWTexture2D<float2> _Des2DC2;
RWStructuredBuffer<float2> _Buffer2DC2;

[numthreads(8,8,1)]
void write2DC2(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width;
	
	_Des2DC2[id.xy] = _Buffer2DC2[idx];
}

//-- write into 3 channel 2D render texture --//

#pragma kernel write2DC3

RWTexture2D<float4> _Des2DC3; //There is no RGBFloat format in Unity atm so must use ARGBFloat
RWStructuredBuffer<float3> _Buffer2DC3;

[numthreads(8,8,1)]
void write2DC3(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width;
	
	_Des2DC3[id.xy] = float4(_Buffer2DC3[idx].xyz, 1);
}

//-- write into 4 channel 2D render texture --//

#pragma kernel write2DC4

RWTexture2D<float4> _Des2DC4;
RWStructuredBuffer<float4> _Buffer2DC4;

[numthreads(8,8,1)]
void write2DC4(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width;
	
	_Des2DC4[id.xy] = _Buffer2DC4[idx];
}

//-----------------------------------------------------------------------//

//-- write into 1 channel 3D render texture --//

#pragma kernel write3DC1

RWTexture3D<float> _Des3DC1;
RWStructuredBuffer<float> _Buffer3DC1;

[numthreads(8,8,8)]
void write3DC1(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width + id.z * _Width * _Height;
	
	_Des3DC1[id] = _Buffer3DC1[idx];
}

//-- write into 2 channel 3D render texture --//

#pragma kernel write3DC2

RWTexture3D<float2> _Des3DC2;
RWStructuredBuffer<float2> _Buffer3DC2;

[numthreads(8,8,8)]
void write3DC2(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width + id.z * _Width * _Height;
	
	_Des3DC2[id] = _Buffer3DC2[idx];
}

//-- write into 3 channel 3D render texture --//

#pragma kernel write3DC3

RWTexture3D<float4> _Des3DC3; //There is no RGBFloat format in Unity atm so must use ARGBFloat
RWStructuredBuffer<float3> _Buffer3DC3;

[numthreads(8,8,8)]
void write3DC3(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width + id.z * _Width * _Height;
	
	_Des3DC3[id] = float4(_Buffer3DC3[idx].xyz, 1);
}

//-- write into 4 channel 3D render texture --//

#pragma kernel write3DC4

RWTexture3D<float4> _Des3DC4;
RWStructuredBuffer<float4> _Buffer3DC4;

[numthreads(8,8,8)]
void write3DC4(uint3 id : SV_DispatchThreadID)
{
	int idx = id.x + id.y * _Width + id.z * _Width * _Height;
	
	_Des3DC4[id] = _Buffer3DC4[idx];
}



